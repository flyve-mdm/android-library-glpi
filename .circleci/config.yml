version: 2
jobs:
  build:
    working_directory: ~/flyve_mdm
    docker:
      # Android the primary container
      - image: circleci/android:api-26-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "glpi/build.gradle" }}
      - run:
          name: Setup gradle properties
          command: source ci/scripts/ci_gradle_properties.sh
      - run:
          name: Build
          command: ./gradlew build
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "glpi/build.gradle" }}
  test_api_v25:
    working_directory: ~/flyve_mdm
    docker:
        - image: circleci/android:api-26-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Setup gradle properties
          command: source ci/scripts/ci_gradle_properties.sh
      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-25;google_apis;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-25;google_apis;armeabi-v7a"
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
          background: true
      - run:
          name: Wait emulator
          command: |
            # wait for it to have booted
            circle-android wait-for-boot
            # unlock the emulator screen
            sleep 30
            adb shell input keyevent 82
      - run:
          name: Run Tests
          command: ./gradlew connectedAndroidTest
      - store_artifacts:
          path: glpi/build/reports
          destination: reports
      - store_test_results:
          path: glpi/build/test-results
  test_api_v16:
      working_directory: ~/flyve_mdm
      docker:
          - image: circleci/android:api-26-alpha
      environment:
        JVM_OPTS: -Xmx3200m
      steps:
        - checkout
        - run:
            name: Setup gradle properties
            command: source ci/scripts/ci_gradle_properties.sh
        - run:
            name: Setup emulator
            command: sdkmanager "system-images;android-16;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-16;default;armeabi-v7a"
        - run:
            name: Launch emulator
            command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
            background: true
        - run:
            name: Wait emulator
            command: |
              # wait for it to have booted
              circle-android wait-for-boot
              # unlock the emulator screen
              sleep 30
              adb shell input keyevent 82
        - run:
            name: Run Tests
            command: ./gradlew connectedAndroidTest
        - store_artifacts:
            path: glpi/build/reports
            destination: reports
        - store_test_results:
            path: glpi/build/test-results
  deploy_production:
      working_directory: ~/flyve_mdm
      docker:
        # Android the primary container
        - image: circleci/android:api-26-alpha
      environment:
        JVM_OPTS: -Xmx3200m
      steps:
        - checkout
        - restore_cache:
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "glpi/build.gradle" }}
        - run:
            name: Setup gradle properties
            command: source ci/scripts/ci_gradle_properties.sh
        - run:
            name: Validate
            command: source ci/scripts/ci_validate_workflow.sh
        - run:
            name: Setup environment
            command: source ci/scripts/ci_setup.sh
        - run:
            name: Update version and code
            command: source ci/scripts/ci_updateversion.sh
        - run:
            name: Push changes to github
            command: source ci/scripts/ci_push_changes.sh
        - run:
            name: Create a github release
            command: source ci/scripts/ci_github_release.sh
        - run:
            name: Deploy to Bintray
            command: source ci/scripts/ci_bintray.sh
        - save_cache:
            paths:
              - ~/.gradle
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "glpi/build.gradle" }}
  documentation:
      working_directory: ~/flyve_mdm
      docker:
        # Android the primary container
        - image: circleci/android:api-26-alpha
      environment:
        JVM_OPTS: -Xmx3200m
      steps:
        - checkout
        - restore_cache:
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "glpi/build.gradle" }}
        - run:
            name: Setup gradle properties
            command: source ci/scripts/ci_gradle_properties.sh
        - run:
            name: Setup environment
            command: source ci/scripts/ci_setup.sh
        - run:
            name: Update version and code
            command: source ci/scripts/ci_updateversion.sh
        - run:
            name: Setup emulator
            command: sdkmanager "system-images;android-16;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-16;default;armeabi-v7a"
        - run:
            name: Launch emulator
            command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
            background: true
        - run:
            name: Wait emulator
            command: |
              # wait for it to have booted
              circle-android wait-for-boot
              # unlock the emulator screen
              sleep 30
              adb shell input keyevent 82
        - run:
            name: Send changelog to gh-page
            command: source ci/scripts/ci_changelog.sh
        - run:
            name: Coverage
            command: source ci/scripts/ci_coverage.sh
        - run:
            name: Javadoc
            command: source ci/scripts/ci_javadoc.sh
        - save_cache:
            paths:
              - ~/.gradle
            key: jars-{{ checksum "build.gradle" }}-{{ checksum  "glpi/build.gradle" }}

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - test_api_v16:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
      - test_api_v25:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
      - documentation:
          requires:
            - test_api_v16
            - test_api_v25
          filters:
            branches:
              only:
                - develop
      - deploy_production:
          requires:
            - build
          filters:
            branches:
              only:
                - master
